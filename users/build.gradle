plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.google.cloud.tools.jib' version '3.2.0'
	id 'checkstyle'
	id 'org.sonarqube' version '4.4.1.3373'
	id 'jacoco'
}

group = 'skillbox.com'
version = '0.0.1'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

checkstyle {
	toolVersion = '10.12.7'
	maxWarnings = 1
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	implementation 'org.liquibase:liquibase-core:4.21.0'
	runtimeOnly 'org.postgresql:postgresql'
	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'

	testCompileOnly 'org.projectlombok:lombok:1.18.30'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

configurations {
	runtime.exclude group: "org.slf4j", module: "slf4j-log4j12"
}

tasks.named('test') {
	useJUnitPlatform()
}

jacocoTestReport {
	reports {
		xml.required = false
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

test.finalizedBy(jacocoTestReport)
tasks.named('sonarqube').configure {
	dependsOn(test)
}